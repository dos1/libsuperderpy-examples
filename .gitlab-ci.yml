variables:
  GIT_SUBMODULE_STRATEGY: recursive

services:
  - docker:dind

stages:
  - build
  - deploy
  - notify

.build:
  image: docker
  stage: build
  retry: 1
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHA"
    paths:
      - utils/output/
    expire_in: 300 minutes
  cache:
    key: $CI_JOB_NAME
    paths:
      - .assetcache/
      - .flatpak-builder/
  variables:
    LIBSUPERDERPY_ANDROID_KEYSTORE_BASE64: $ANDROID_KEYSTORE_BASE64
    LIBSUPERDERPY_ANDROID_KEYSTORE_PASSWORD: $ANDROID_KEYSTORE_PASSWORD
  before_script:
    - ln -s /usr/local/bin/docker /usr/local/bin/podman
    - echo -e '#!/bin/sh\n$@' > /usr/local/bin/sudo
    - chmod +x /usr/local/bin/sudo

build:win64:
  extends: .build
  script:
    - cd utils
    - ./package_win64.sh

build:win32:
  extends: .build
  script:
    - cd utils
    - ./package_win32.sh

build:html5:
  extends: .build
  script:
    - cd utils
    - ./package_html5.sh

build:wasm:
  extends: .build
  script:
    - cd utils
    - ./package_wasm.sh

build:linux-amd64:
  extends: .build
  script:
    - cd utils
    - ./package_linux_amd64.sh

build:linux-i686:
  extends: .build
  script:
    - cd utils
    - ./package_linux_i686.sh

build:linux-flatpak-amd64:
  extends: .build
  script:
    - cd utils
    - ./package_linux_flatpak_amd64.sh

build:linux-flatpak-arm64:
  extends: .build
  script:
    - cd utils
    - ./package_linux_flatpak_arm64.sh

build:linux-flatpak-armv7:
  extends: .build
  only:
    variables:
      - $ENABLE_32BIT_FLATPAK
  script:
    - cd utils
    - ./package_linux_flatpak_armv7.sh

build:linux-flatpak-i686:
  extends: .build
  only:
    variables:
      - $ENABLE_32BIT_FLATPAK
  script:
    - cd utils
    - ./package_linux_flatpak_i686.sh

build:macos:
  extends: .build
  script:
    - cd utils
    - ./package_macos.sh

build:android-armv7:
  extends: .build
  script:
    - cd utils
    - ./package_android_armv7.sh git

build:steamlink:
  extends: .build
  script:
    - cd utils
    - ./package_steamlink.sh

build:pocketchip:
  extends: .build
  script:
    - cd utils
    - ./package_pocketchip.sh

build:raspberrypi:
  extends: .build
  script:
    - cd utils
    - ./package_raspberrypi.sh

build:switch:
  extends: .build
  script:
    - cd utils
    - ./package_switch.sh

build:maemo5:
  extends: .build
  script:
    - cd utils
    - ./package_maemo5.sh

.butler-deploy:
  stage: deploy
  image: dosowisko/butler
  when: on_success
  retry: 2
  only:
    refs:
      - master
    variables:
      - $BUTLER_TARGET
  environment:
    name: itch-$CI_JOB_NAME
    url: $ITCH_URL
  variables:
    GIT_STRATEGY: none
  script:
    - butler push utils/output/$DEPLOY_FILENAME $BUTLER_TARGET:$DEPLOY_TARGET --userversion `echo $CI_COMMIT_SHA | cut -c1-7`

deploy:linux-i686:
  extends: .butler-deploy
  environment:
    name: itch-linux-steamrt-i686
  dependencies:
    - build:linux-i686
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-linux-i686.tar.gz
    DEPLOY_TARGET: ci-linux-steamrt-i686

deploy:linux-amd64:
  extends: .butler-deploy
  environment:
    name: itch-linux-steamrt-amd64
  dependencies:
    - build:linux-amd64
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-linux-amd64.tar.gz
    DEPLOY_TARGET: ci-linux-steamrt-amd64

deploy:linux-flatpak-amd64:
  extends: .butler-deploy
  environment:
    name: itch-linux-flatpak-amd64
  dependencies:
    - build:linux-flatpak-amd64
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-linux-amd64.flatpak
    DEPLOY_TARGET: ci-linux-flatpak-amd64

deploy:linux-flatpak-arm64:
  extends: .butler-deploy
  environment:
    name: itch-linux-flatpak-arm64
  dependencies:
    - build:linux-flatpak-arm64
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-linux-arm64.flatpak
    DEPLOY_TARGET: ci-linux-flatpak-arm64

deploy:linux-flatpak-armv7:
  extends: .butler-deploy
  only:
    variables:
      - $ENABLE_32BIT_FLATPAK
  environment:
    name: itch-linux-flatpak-armv7
  dependencies:
    - build:linux-flatpak-armv7
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-linux-armv7.flatpak
    DEPLOY_TARGET: ci-linux-flatpak-armv7

deploy:linux-flatpak-i686:
  extends: .butler-deploy
  only:
    variables:
      - $ENABLE_32BIT_FLATPAK
  environment:
    name: itch-linux-flatpak-i686
  dependencies:
    - build:linux-flatpak-i686
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-linux-i686.flatpak
    DEPLOY_TARGET: ci-linux-flatpak-i686

deploy:win32:
  extends: .butler-deploy
  environment:
    name: itch-win32
  dependencies:
    - build:win32
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-win32.zip
    DEPLOY_TARGET: ci-win32

deploy:win64:
  extends: .butler-deploy
  environment:
    name: itch-win64
  dependencies:
    - build:win64
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-win64.zip
    DEPLOY_TARGET: ci-win64

deploy:html5:
  extends: .butler-deploy
  environment:
    name: itch-html5
  dependencies:
    - build:html5
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-html5.zip
    DEPLOY_TARGET: ci-html5

deploy:wasm:
  extends: .butler-deploy
  environment:
    name: itch-wasm
  dependencies:
    - build:wasm
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-wasm.zip
    DEPLOY_TARGET: ci-wasm

deploy:macos:
  extends: .butler-deploy
  environment:
    name: itch-macos
  dependencies:
    - build:macos
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-macos.zip
    DEPLOY_TARGET: ci-macos

deploy:android-armv7:
  extends: .butler-deploy
  environment:
    name: itch-android-armv7
  dependencies:
    - build:android-armv7
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-android-armv7.apk
    DEPLOY_TARGET: ci-android-armv7

deploy:steamlink:
  extends: .butler-deploy
  environment:
    name: itch-steamlink
  dependencies:
    - build:steamlink
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-steamlink.zip
    DEPLOY_TARGET: ci-steamlink

deploy:pocketchip:
  extends: .butler-deploy
  environment:
    name: itch-pocketchip
  dependencies:
    - build:pocketchip
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-pocketchip.zip
    DEPLOY_TARGET: ci-pocketchip

deploy:raspberrypi:
  extends: .butler-deploy
  environment:
    name: itch-raspberrypi
  dependencies:
    - build:raspberrypi
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-raspberrypi.zip
    DEPLOY_TARGET: ci-raspberrypi

deploy:switch:
  extends: .butler-deploy
  environment:
    name: itch-switch
  dependencies:
    - build:switch
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-switch.zip
    DEPLOY_TARGET: ci-switch

deploy:maemo5:
  extends: .butler-deploy
  environment:
    name: itch-maemo5
  dependencies:
    - build:maemo5
  variables:
    DEPLOY_FILENAME: $PROJECT_NAME-maemo5.tar.gz
    DEPLOY_TARGET: ci-maemo5

.xmpp-notify:
  image: dosowisko/xmpp-muc-send
  stage: notify
  retry: 2
  when: on_success
  variables:
    GIT_STRATEGY: none
  dependencies: []

notify:success:
  extends: .xmpp-notify
  when: on_success
  script:
    - 'xmpp-muc-send -j "$XMPP_JID" -n "$XMPP_NICK" -p "$XMPP_PASSWORD" -r "$XMPP_ROOM" "New builds ($PROJECT_NAME): [`echo $CI_COMMIT_SHA | cut -c1-7` | $CI_COMMIT_REF_NAME] $CI_COMMIT_TITLE"'

notify:failure:
  extends: .xmpp-notify
  when: on_failure
  script:
    - 'xmpp-muc-send -j "$XMPP_JID" -n "$XMPP_NICK" -p "$XMPP_PASSWORD" -r "$XMPP_ROOM" "FAILURE ($PROJECT_NAME): [`echo $CI_COMMIT_SHA | cut -c1-7` | $CI_COMMIT_REF_NAME] $CI_COMMIT_TITLE $CI_PIPELINE_URL"'
